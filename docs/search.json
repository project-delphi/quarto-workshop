[
  {
    "objectID": "index.html#prerequisites",
    "href": "index.html#prerequisites",
    "title": "Quarto Workshop",
    "section": "Prerequisites",
    "text": "Prerequisites\nTools\n\nGitHub account\nPOSIX Compliant environment (not git bash, powershell or cygwin)\nVSCode installed\nGit Configured\nConda installed\n\nSkills\n\nCreating conda environments\nComfort with Git & GitHub\nBranching (GitHub Flow)\nPosts answers and links in chat"
  },
  {
    "objectID": "index.html#what-is-quarto",
    "href": "index.html#what-is-quarto",
    "title": "Quarto Workshop",
    "section": "What is Quarto?",
    "text": "What is Quarto?\nQuarto is a modern, interactive publishing system built on pandoc:\n\nConverts Markdown files to multiple formats:\n\nhtml/rmarkdown/pdf\nReveal.js (slides, pptx)\nJupyter Notebooks (ipynb)\nePub, Typst, LaTex and more\n\n\norigin: org-mode (Emacs) =&gt; Sweave / knitr =&gt; RMarkdown"
  },
  {
    "objectID": "index.html#why-use-quarto",
    "href": "index.html#why-use-quarto",
    "title": "Quarto Workshop",
    "section": "Why Use Quarto?",
    "text": "Why Use Quarto?\n\nFocus on reproducibility\nEasy interactivity\nFlexible output formats\nGood processing of code blocks:\n\nR\nPython\nJulia\nObservableJS"
  },
  {
    "objectID": "index.html#quarto-example-gallery",
    "href": "index.html#quarto-example-gallery",
    "title": "Quarto Workshop",
    "section": "Quarto Example Gallery",
    "text": "Quarto Example Gallery\n\nOpen the Quarto Examples Gallery.\nBrowse through the examples of:\n\nScientific reports\nData visualizations\nBlogs\nInteractive web apps\n\n\nExercise\nIdentify one example to recreate during the workshop."
  },
  {
    "objectID": "index.html#underlying-technology",
    "href": "index.html#underlying-technology",
    "title": "Quarto Workshop",
    "section": "Underlying Technology",
    "text": "Underlying Technology\nQuarto: A transpiler that converts markdown to various formats. The foundational technologies are:\n\nJavascript (interactivity)\nHTML (markdown)\nCSS (fence divs)"
  },
  {
    "objectID": "index.html#installation",
    "href": "index.html#installation",
    "title": "Quarto Workshop",
    "section": "Installation",
    "text": "Installation\n\nInstall Quarto binary program\nInstall the Quarto extension for VSCode:\n\nExtensions &gt; Search “Quarto” &gt; Install\n\nCommand line install of quarto cli\n\nExercise\nOne, Two & Three.\nWARNING: Quarto is under active development!"
  },
  {
    "objectID": "index.html#setting-up-your-environment",
    "href": "index.html#setting-up-your-environment",
    "title": "Quarto Workshop",
    "section": "Setting Up Your Environment",
    "text": "Setting Up Your Environment\n\nCreate a new directory for the workshop:\nmkdir -p ~/code/delete-me/quarto-play\ncd ~/code/delete-me/quarto-play\nCreate a Conda environment:\ncurl -L -o environment.yml https://shorturl.at/dZII6\nconda env create -f environment.yml -p \"$PWD/.conda\" \nconda activate \"$PWD/.conda\"\nCreate .gitignore file:\ncurl -o .gitignore https://raw.githubusercontent.com/github/gitignore/main/Python.gitignore\necho -e \"\\n# Custom ignores\\n.conda/\\n.env/\" &gt;&gt; .gitignore\nInitialize Git:\ngit init --initial-branch=main\ngit switch -c basic-markdown"
  },
  {
    "objectID": "index.html#write-markdown",
    "href": "index.html#write-markdown",
    "title": "Quarto Workshop",
    "section": "Write Markdown",
    "text": "Write Markdown\n\nWrite a small example.md file:\n# Big Hello, Quarto!\n## Smaller hello, quarto!\n###### smallest hello, quarto!\nThis is a demo of Markdown features:\n- **Bold text**\n- *Italic text*\n- [Links](https://quarto.org)\n- ![Image](https://picsum.photos/200/300)\n\nExercise\nWrite some markdown in a file."
  },
  {
    "objectID": "index.html#markdown-code-blocks",
    "href": "index.html#markdown-code-blocks",
    "title": "Quarto Workshop",
    "section": "Markdown Code Blocks",
    "text": "Markdown Code Blocks\ncode blocks: formatted but not executed in markdown.\nUse 3 backticks to create code blocks in markdown & the name of the language.\nPython\ndef greet(name):\n   print(f\"Hello, {name}!\")\nR\ngreet &lt;- function(name) {\n   print(paste(\"Hello\", name))\n}\nJavascript\nfunction greet(name) {\n   console.log(`Hello, ${name}!`);\n}\nExercise\nAdd code blocks to your markdown file for Python, Javascript & R."
  },
  {
    "objectID": "index.html#convert-markdown",
    "href": "index.html#convert-markdown",
    "title": "Quarto Workshop",
    "section": "Convert Markdown",
    "text": "Convert Markdown\nTranspile example.md using quarto:\nquarto render example.md --to pdf\nquarto render example.md --to html\nquarto render example.md --to ipynb\nExercise\nWrite and convert a markdown file to other format. Commit changes"
  },
  {
    "objectID": "index.html#introducing-qmd",
    "href": "index.html#introducing-qmd",
    "title": "Quarto Workshop",
    "section": "Introducing qmd",
    "text": "Introducing qmd\nBasic features:\n\ndocument metadata YAML format file header:\n---\ntitle: \"blah\"\nformat: \"html\"\ndate: \"2025-01-22\"\n---\n::: fenced blocks are used for quarto & custom css divs and classes\n\n::: {.class}\n::: {#id}\n::: {.class #id}"
  },
  {
    "objectID": "index.html#example-qmd",
    "href": "index.html#example-qmd",
    "title": "Quarto Workshop",
    "section": "Example qmd",
    "text": "Example qmd\n\nnew branch git switch -c qmd-demo\nWrite a small example.qmd file:\n---   \ntitle: \"Demo\"\nformat: html\n---\n# Hello, Quarto!\n::: {.panel-tabset}\n### Tab 1\nContent for tab 1.\n### Tab 2\nContent for tab 2.\n:::\nRender the file:\nquarto render example.qmd\n\nExercise\nWrite a .qmd file with fenced blocks."
  },
  {
    "objectID": "index.html#simple-qmd-code-blocks",
    "href": "index.html#simple-qmd-code-blocks",
    "title": "Quarto Workshop",
    "section": "Simple qmd Code Blocks",
    "text": "Simple qmd Code Blocks\nQuarto supports executing code blocks in markdown files.\nUse curly braces {} to specify the execution language: {python}, {r}, {julia}.\nUse curly braces with a period {.} to specify formatting options, no execution: {.python}, {.r}, {.julia}.\nPython\n\ndef greet(name):\n    print(f\"Hello, {name}!\")\ngreet(\"Quarto\")\n\nHello, Quarto!\n\n\nR\n#| echo: true\n#| warning: false\ngreet &lt;- function(name) {\n    print(paste(\"Hello\", name))\n}\ngreet(\"Quarto\") \n“Quarto”\nExercise\nCreate a .qmd file with a Python and R code block."
  },
  {
    "objectID": "index.html#code-blocks",
    "href": "index.html#code-blocks",
    "title": "Quarto Workshop",
    "section": "#| Code Blocks",
    "text": "#| Code Blocks\nThe #| syntax adds control over code block execution & display.\n   #| echo: true\n   #| warning: false\n   def greet(name):\n      print(f\"Hello, {name}!\")\n\n\n\n\n\n\n\nOption\nDescription\n\n\n\n\n#|eval\nEvaluate the code chunk.\n\n\n#|echo\nInclude the source code in output.\n\n\n#|output\nInclude the results of executing the code in the output (true, false, or asis).\n\n\n#|warning\nInclude warnings in the output.\n\n\n#|error\nInclude errors in the output.\n\n\n#|include\nCatch all for preventing any output (code or results) from being included.\n\n\n\nExercise\nCreate a .qmd file with a Python code block using the #| options like echo, warning, and eval."
  },
  {
    "objectID": "index.html#create-a-blog-project",
    "href": "index.html#create-a-blog-project",
    "title": "Quarto Workshop",
    "section": "Create a Blog Project",
    "text": "Create a Blog Project\n\nCreate a Quarto blog project:\nquarto create project blog ~/code/delete-me/quarto-blog\ncd ~/code/delete-me/quarto-blog \n\nExercise\n\nCreate a blog project & explain the directory structure.\nWhat is _quarto.yml?\nWhat is posts/ directory?\nWhat is style.css?"
  },
  {
    "objectID": "index.html#create-a-blog-conda-environment",
    "href": "index.html#create-a-blog-conda-environment",
    "title": "Quarto Workshop",
    "section": "Create a Blog Conda Environment",
    "text": "Create a Blog Conda Environment\n\nCreate a Conda environment:\ncurl -L -o environment.yml https://shorturl.at/dZII6\nconda env create -f environment.yml -p \"$PWD/.conda\" \nconda activate \"$PWD/.conda\"\nCreate .gitignore file:\ncurl -o .gitignore https://raw.githubusercontent.com/github/gitignore/main/Python.gitignore\necho -e \"\\n# Custom ignores\\n.conda/\\n.env/\" &gt;&gt; .gitignore\nInitialize Git:\ngit init --initial-branch=main\ngit switch -c basic-markdown\n\nExercise\nVerify that the conda blog environment is active."
  },
  {
    "objectID": "index.html#writing-a-blog-post",
    "href": "index.html#writing-a-blog-post",
    "title": "Quarto Workshop",
    "section": "Writing a Blog Post",
    "text": "Writing a Blog Post\nCreate a new welcome.qmd file in the posts/ folder:\n---\ntitle: \"My First Blog Post\"\ndate: 2025-01-20\n---\n\n# Welcome!\n\nThis is my first blog post using Quarto. Here's a dummy classifer on breast cancer data.\n\n   ```{.python}\n   import urllib.request\n\n   gist_url = \"https://shorturl.at/WZ8hR\"\n\n   try:\n      with urllib.request.urlopen(gist_url) as response:\n         script_content = response.read().decode('utf-8')\n      \n      print(\"Executing the script...\")\n      exec(script_content)  # Execute the script\n   except Exception as e:\n      print(f\"An error occurred: {e}\")\n   ```"
  },
  {
    "objectID": "index.html#preview-render-blog-post",
    "href": "index.html#preview-render-blog-post",
    "title": "Quarto Workshop",
    "section": "Preview & Render Blog Post",
    "text": "Preview & Render Blog Post\nThe preview is a live preview of the blog post in the browser. The render command generates the output file.\n\nPreview:\nquarto preview posts/welcome.qmd\nRender:\nquarto render posts/welcome.qmd"
  },
  {
    "objectID": "index.html#using-jupyter-to-blog",
    "href": "index.html#using-jupyter-to-blog",
    "title": "Quarto Workshop",
    "section": "Using Jupyter To Blog",
    "text": "Using Jupyter To Blog\n\nConvert a jupyter notebook to a blogpost using quarto.\nQuarto first converts the notebook to qmd, and from there to the desired format.\nJust put YAML metadata at the top of the notebook in raw text format.\nSave the notebook in the posts/ directory.\nquarto preview & quarto render the notebook.\n\nExercise\nWrite and convert a jupyter notebook to a blog post."
  },
  {
    "objectID": "index.html#configure-github-pages",
    "href": "index.html#configure-github-pages",
    "title": "Quarto Workshop",
    "section": "Configure GitHub Pages",
    "text": "Configure GitHub Pages\n\nConfigure _quarto.yml:\nproject:\n  type: website\npublish:\n  gh-pages:\n    branch: gh-pages\nConfigure repo UI settings to publish from gh-pages branch\nPush to GitHub:\ngit add .\ngit commit -m \"Initial blog setup\"\ngit push origin blog-setup\nMerge to main and deploy."
  },
  {
    "objectID": "index.html#blog-with-rstudio",
    "href": "index.html#blog-with-rstudio",
    "title": "Quarto Workshop",
    "section": "Blog with RStudio",
    "text": "Blog with RStudio\n\nRun which R after conda activated environment\nIf all good in 1, then open using open -na rstudio\nCreate new project from RStudio UI\nSelect Quarto Blog project type.\nCreate a new post and render it.\nPush to GitHub.\n\nExercise\nCreate a quarto blog post using RStudio."
  },
  {
    "objectID": "index.html#group-exercise-collaborative-blog",
    "href": "index.html#group-exercise-collaborative-blog",
    "title": "Quarto Workshop",
    "section": "Group Exercise: Collaborative Blog",
    "text": "Group Exercise: Collaborative Blog\n\nForm groups of 3–4 persons, have one person who is advanced in github flow.\nEach group member creates a branch:\ngit checkout -b member_initials/feature-branch-name\nWrite posts in the posts/ directory.\nMerge branches to main.\nPush and share your blog URL."
  },
  {
    "objectID": "index.html#recap",
    "href": "index.html#recap",
    "title": "Quarto Workshop",
    "section": "Recap",
    "text": "Recap\n\nQuarto combines flexibility and reproducibility.\nCreate professional blogs, reports, and more.\nPractice collaborative workflows with GitHub.\n\nNext Steps\n\nExplore advanced Quarto features.\nBuild your personal portfolio site!"
  },
  {
    "objectID": "index.html#questions",
    "href": "index.html#questions",
    "title": "Quarto Workshop",
    "section": "Questions?",
    "text": "Questions?"
  }
]