[
  {
    "objectID": "index.html#prerequisites",
    "href": "index.html#prerequisites",
    "title": "Quarto Workshop",
    "section": "Prerequisites",
    "text": "Prerequisites\nTools\n\nGitHub account\nLinux-like environment\nVSCode installed\nGit Configured\nConda installed\n\nSkills\n\nCreating conda environments\nComfort with Git & GitHub\nBranching (GitHub Flow)\nPosts answers and links in chat"
  },
  {
    "objectID": "index.html#what-is-quarto",
    "href": "index.html#what-is-quarto",
    "title": "Quarto Workshop",
    "section": "What is Quarto?",
    "text": "What is Quarto?\nQuarto is a modern, interactive publishing system built on pandoc:\n\nConverts Markdown files to multiple formats:\n\nhtml/rmarkdown/pdf\nReveal.js (slides, pptx)\nJupyter Notebooks (ipynb)\nePub, Typst, LaTex and more\n\n\norigin: org-mode (Emacs) =&gt; Sweave / knitr =&gt; RMarkdown"
  },
  {
    "objectID": "index.html#why-use-quarto",
    "href": "index.html#why-use-quarto",
    "title": "Quarto Workshop",
    "section": "Why Use Quarto?",
    "text": "Why Use Quarto?\n\nFocus on reproducibility\nEasy interactivity\nFlexible output formats\nGood processing of code blocks:\n\nR\nPython\nJulia\nObservableJS"
  },
  {
    "objectID": "index.html#quarto-example-gallery",
    "href": "index.html#quarto-example-gallery",
    "title": "Quarto Workshop",
    "section": "Quarto Example Gallery",
    "text": "Quarto Example Gallery\n\nOpen the Quarto Examples Gallery.\nBrowse through the examples of:\n\nScientific reports\nData visualizations\nBlogs\nInteractive web apps\n\n\nExercise\nIdentify one example to recreate during the workshop."
  },
  {
    "objectID": "index.html#underlying-technology",
    "href": "index.html#underlying-technology",
    "title": "Quarto Workshop",
    "section": "Underlying Technology",
    "text": "Underlying Technology\nQuarto: A transpiler that converts markdown to various formats. The foundational technologies are:\n\nJavascript (interactivity)\nHTML (markdown)\nCSS (fence divs)"
  },
  {
    "objectID": "index.html#installation",
    "href": "index.html#installation",
    "title": "Quarto Workshop",
    "section": "Installation",
    "text": "Installation\n\nInstall Quarto binary program\nInstall the Quarto extension for VSCode:\n\nExtensions &gt; Search “Quarto” &gt; Install\n\nCommand line install of quarto cli\n\nExercise\nOne, Two and Three.\nWARNING: Quarto is under active development!"
  },
  {
    "objectID": "index.html#setting-up-your-environment",
    "href": "index.html#setting-up-your-environment",
    "title": "Quarto Workshop",
    "section": "Setting Up Your Environment",
    "text": "Setting Up Your Environment\n\nCreate a new directory for the workshop:\nmkdir quarto-workshop\ncd quarto-workshop\nCreate a Conda environment:\nconda env create -p \"$PWD/.conda\" python=3.10 -y\nconda activate \"$PWD/.conda\"\nInitialize Git:\ngit init"
  },
  {
    "objectID": "index.html#write-markdown",
    "href": "index.html#write-markdown",
    "title": "Quarto Workshop",
    "section": "Write Markdown",
    "text": "Write Markdown\n\nWrite a small example.md file:\n# Big Hello, Quarto!\n## Smaller hello, quarto!\n###### smallest hello, quarto!\nThis is a demo of Markdown features:\n- **Bold text**\n- *Italic text*\n- [Links](https://quarto.org)\n- ![Image](https://picsum.photos/200/300)"
  },
  {
    "objectID": "index.html#markdown-code-blocks",
    "href": "index.html#markdown-code-blocks",
    "title": "Quarto Workshop",
    "section": "Markdown Code Blocks",
    "text": "Markdown Code Blocks\nAdd code blocks: formatted but not executed in markdown.\nPython\ndef greet(name):\n   print(f\"Hello, {name}!\")\nR\ngreet &lt;- function(name) {\n   print(paste(\"Hello\", name))\n}\nJavascript\nfunction greet(name) {\n   console.log(`Hello, ${name}!`);\n}"
  },
  {
    "objectID": "index.html#convert-markdown",
    "href": "index.html#convert-markdown",
    "title": "Quarto Workshop",
    "section": "Convert Markdown",
    "text": "Convert Markdown\nTranspile example.md using quarto:\nquarto render example.md --to pdf\nquarto render example.md --to html\nquarto render example.md --to ipynb\nExercise\nWrite and convert a markdown file to other format."
  },
  {
    "objectID": "index.html#introducing-qmd",
    "href": "index.html#introducing-qmd",
    "title": "Quarto Workshop",
    "section": "Introducing qmd",
    "text": "Introducing qmd\nBasic features:\n\ndocument metadata YAML format file header:\n\ntitle: \"blah\"\nformat: \"html\"\ndate: \"2025-01-22\"\n::: fence blocks are used for quarto & custom css divs and classes\n\n::: {.class}\n::: {#id}\n::: {.class #id}"
  },
  {
    "objectID": "index.html#example-qmd",
    "href": "index.html#example-qmd",
    "title": "Quarto Workshop",
    "section": "Example qmd",
    "text": "Example qmd\n\nWrite a small example.qmd file:\n---   \ntitle: \"Demo\"\nformat: html\n---\n# Hello, Quarto!\n::: {.panel-tabset}\n### Tab 1\nContent for tab 1.\n### Tab 2\nContent for tab 2.\n:::\nRender the file:\nquarto render example.qmd\n\nExercise\nWrite a .qmd file with fenced divs."
  },
  {
    "objectID": "index.html#simple-qmd-code-blocks",
    "href": "index.html#simple-qmd-code-blocks",
    "title": "Quarto Workshop",
    "section": "Simple qmd Code Blocks",
    "text": "Simple qmd Code Blocks\nQuarto supports executing code blocks in markdown files.\nPython\n\ndef greet(name):\n    print(f\"Hello, {name}!\")\ngreet(\"Quarto\")\n\nHello, Quarto!\n\n\nJavascript\n#| echo: true\nconsole.log(\"Hello, Quarto!\")\nExercise\nCreate a .qmd file with a Python and R code block."
  },
  {
    "objectID": "index.html#code-blocks",
    "href": "index.html#code-blocks",
    "title": "Quarto Workshop",
    "section": "#| Code Blocks",
    "text": "#| Code Blocks\nThe #| syntax adds control over code block execution & display.\n   #| echo: true\n   #| warning: false\n   def greet(name):\n      print(f\"Hello, {name}!\")\n\n\n\n\n\n\n\nOption\nDescription\n\n\n\n\n#|eval\nEvaluate the code chunk.\n\n\n#|echo\nInclude the source code in output.\n\n\n#|output\nInclude the results of executing the code in the output (true, false, or asis).\n\n\n#|warning\nInclude warnings in the output.\n\n\n#|error\nInclude errors in the output.\n\n\n#|include\nCatch all for preventing any output (code or results) from being included.\n\n\n\nExercise\nCreate a .qmd file with a Python code block using the #| options like echo, warning, and eval."
  },
  {
    "objectID": "index.html#create-a-blog-project",
    "href": "index.html#create-a-blog-project",
    "title": "Quarto Workshop",
    "section": "Create a Blog Project",
    "text": "Create a Blog Project\n\nCreate a Quarto blog project:\nquarto create-project quarto-blog \nInitialize Git and create branches:\ngit init\ngit checkout -b blog-setup\n\nExercise\n\nCreate a blog project and explain the directory structure.\nWhat is _quarto.yml?\nWhat is posts directory?\nWhat is style.css?"
  },
  {
    "objectID": "index.html#create-a-blog-conda-environment",
    "href": "index.html#create-a-blog-conda-environment",
    "title": "Quarto Workshop",
    "section": "Create a Blog Conda Environment",
    "text": "Create a Blog Conda Environment\n\nWrite an environment.yml file:\n\n name: quarto-blog-conda\nchannels:\n  - conda-forge\n  - nodefaults\ndependencies:\n  - python=3.10\n  - jupyter\n  - matplotlib\n  - numpy\n  - scikit-learn\n  - pandas\n  - pip\n  - pip:\n      - quarto-cli\n\nActivate the environment:\nconda env create -f environment.yml -p \"$PWD/.conda\"\nconda activate \"$PWD/.conda\"\n\nExercise\nVerify that your conda environment is active."
  },
  {
    "objectID": "index.html#writing-a-blog-post",
    "href": "index.html#writing-a-blog-post",
    "title": "Quarto Workshop",
    "section": "Writing a Blog Post",
    "text": "Writing a Blog Post\n\nCreate a new welcome.qmd file in the posts folder:\n---\ntitle: \"My First Blog Post\"\ndate: 2025-01-20\n---\n\n# Welcome!\n\nThis is my first blog post using Quarto. Here's a dummy classifer on breast cancer data.\n\n```python\nimport urllib.request\n\ngist_url = (\"https://gist.githubusercontent.com/project-delphi/\" \n+ \n\"aac6c2614e3ab4e07b5f41012e9f30e4/raw/\")\n\ntry:\n   with urllib.request.urlopen(gist_url) as response:\n      script_content = response.read().decode('utf-8')\n\n   print(\"Executing the script...\")\n   exec(script_content)  # Execute the script\nexcept Exception as e:\n   print(f\"An error occurred: {e}\")"
  },
  {
    "objectID": "index.html#preview-render-blog-post",
    "href": "index.html#preview-render-blog-post",
    "title": "Quarto Workshop",
    "section": "Preview & Render Blog Post",
    "text": "Preview & Render Blog Post\nThe preview is a live preview of the blog post in the browser. The render command generates the output file.\n\nPreview:\nquarto preview posts/welcome.qmd\nRender:\nquarto render posts/welcome.qmd"
  },
  {
    "objectID": "index.html#configure-github-pages",
    "href": "index.html#configure-github-pages",
    "title": "Quarto Workshop",
    "section": "Configure GitHub Pages",
    "text": "Configure GitHub Pages\n\nConfigure _quarto.yml:\nproject:\n  type: website\npublish:\n  gh-pages:\n    branch: gh-pages\nConfigure repo UI settings to publish from gh-pages branch\nPush to GitHub:\ngit add .\ngit commit -m \"Initial blog setup\"\ngit push origin blog-setup\nMerge to main and deploy."
  },
  {
    "objectID": "index.html#group-exercise-collaborative-blog",
    "href": "index.html#group-exercise-collaborative-blog",
    "title": "Quarto Workshop",
    "section": "Group Exercise: Collaborative Blog",
    "text": "Group Exercise: Collaborative Blog\n\nForm groups of 3–4 persons, have one person who is advanced in github flow.\nEach group member creates a branch:\ngit checkout -b member_initials/feature-branch-name\nWrite posts in the posts/ directory.\nMerge branches to main.\nPush and share your blog URL."
  },
  {
    "objectID": "index.html#recap",
    "href": "index.html#recap",
    "title": "Quarto Workshop",
    "section": "Recap",
    "text": "Recap\n\nQuarto combines flexibility and reproducibility.\nCreate professional blogs, reports, and more.\nPractice collaborative workflows with GitHub.\n\nNext Steps\n\nExplore advanced Quarto features.\nBuild your personal portfolio site!"
  },
  {
    "objectID": "index.html#questions",
    "href": "index.html#questions",
    "title": "Quarto Workshop",
    "section": "Questions?",
    "text": "Questions?"
  }
]